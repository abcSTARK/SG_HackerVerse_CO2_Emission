/*
 * Doconomy Aland Index
 * OpenAPI Specification for Doconomy Aland Index. For additional documentation and use cases, go to [Mastercard Developers](https://developer.mastercard.com/product/doconomy-aland-index).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.MCErrorResponse;
import org.openapitools.client.model.MCTransactionFootprints;
import org.openapitools.client.model.MCTransactions;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EnvironmentalImpactApi {
    private ApiClient localVarApiClient;

    public EnvironmentalImpactApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EnvironmentalImpactApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for footprintsByTransactionData
     * @param mcTransactions List of payment transaction which needs to be scored. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> This response code is returned when one or more request parameters is either missing or is invalid. A caller should update his request as per error details before trying again. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> This response code is returned when the MediaType in request is other than application/json. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call footprintsByTransactionDataCall(MCTransactions mcTransactions, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = mcTransactions;

        // create path and map variables
        String localVarPath = "/transaction-footprints";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call footprintsByTransactionDataValidateBeforeCall(MCTransactions mcTransactions, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mcTransactions' is set
        if (mcTransactions == null) {
            throw new ApiException("Missing the required parameter 'mcTransactions' when calling footprintsByTransactionData(Async)");
        }
        

        okhttp3.Call localVarCall = footprintsByTransactionDataCall(mcTransactions, _callback);
        return localVarCall;

    }

    /**
     * Calculate Transaction Footprints
     * This service calculates carbon emission and water usage based on payment transaction amount and the merchant category code. You can send one or more transactions together to get the transaction footprints.
     * @param mcTransactions List of payment transaction which needs to be scored. (required)
     * @return MCTransactionFootprints
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> This response code is returned when one or more request parameters is either missing or is invalid. A caller should update his request as per error details before trying again. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> This response code is returned when the MediaType in request is other than application/json. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public MCTransactionFootprints footprintsByTransactionData(MCTransactions mcTransactions) throws ApiException {
        ApiResponse<MCTransactionFootprints> localVarResp = footprintsByTransactionDataWithHttpInfo(mcTransactions);
        return localVarResp.getData();
    }

    /**
     * Calculate Transaction Footprints
     * This service calculates carbon emission and water usage based on payment transaction amount and the merchant category code. You can send one or more transactions together to get the transaction footprints.
     * @param mcTransactions List of payment transaction which needs to be scored. (required)
     * @return ApiResponse&lt;MCTransactionFootprints&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> This response code is returned when one or more request parameters is either missing or is invalid. A caller should update his request as per error details before trying again. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> This response code is returned when the MediaType in request is other than application/json. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<MCTransactionFootprints> footprintsByTransactionDataWithHttpInfo(MCTransactions mcTransactions) throws ApiException {
        okhttp3.Call localVarCall = footprintsByTransactionDataValidateBeforeCall(mcTransactions, null);
        Type localVarReturnType = new TypeToken<MCTransactionFootprints>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Calculate Transaction Footprints (asynchronously)
     * This service calculates carbon emission and water usage based on payment transaction amount and the merchant category code. You can send one or more transactions together to get the transaction footprints.
     * @param mcTransactions List of payment transaction which needs to be scored. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> This response code is returned when one or more request parameters is either missing or is invalid. A caller should update his request as per error details before trying again. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> This response code is returned when the MediaType in request is other than application/json. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call footprintsByTransactionDataAsync(MCTransactions mcTransactions, final ApiCallback<MCTransactionFootprints> _callback) throws ApiException {

        okhttp3.Call localVarCall = footprintsByTransactionDataValidateBeforeCall(mcTransactions, _callback);
        Type localVarReturnType = new TypeToken<MCTransactionFootprints>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
