/*
 * Doconomy Aland Index
 * OpenAPI Specification for Doconomy Aland Index. For additional documentation and use cases, go to [Mastercard Developers](https://developer.mastercard.com/product/doconomy-aland-index).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.openapitools.client.model.MCCarbonSocialCost;
import org.openapitools.client.model.MCWaterUseSocialCost;

/**
 * This object holds the transaction footprint for a payment transaction.
 */
@ApiModel(description = "This object holds the transaction footprint for a payment transaction.")

public class MCTransactionFootprint {
  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_CARBON_EMISSION_IN_GRAMS = "carbonEmissionInGrams";
  @SerializedName(SERIALIZED_NAME_CARBON_EMISSION_IN_GRAMS)
  private BigDecimal carbonEmissionInGrams;

  public static final String SERIALIZED_NAME_CARBON_EMISSION_IN_OUNCES = "carbonEmissionInOunces";
  @SerializedName(SERIALIZED_NAME_CARBON_EMISSION_IN_OUNCES)
  private BigDecimal carbonEmissionInOunces;

  public static final String SERIALIZED_NAME_CARBON_SOCIAL_COST = "carbonSocialCost";
  @SerializedName(SERIALIZED_NAME_CARBON_SOCIAL_COST)
  private MCCarbonSocialCost carbonSocialCost;

  public static final String SERIALIZED_NAME_WATER_USE_IN_CUBIC_METERS = "waterUseInCubicMeters";
  @SerializedName(SERIALIZED_NAME_WATER_USE_IN_CUBIC_METERS)
  private BigDecimal waterUseInCubicMeters;

  public static final String SERIALIZED_NAME_WATER_USE_IN_GALLONS = "waterUseInGallons";
  @SerializedName(SERIALIZED_NAME_WATER_USE_IN_GALLONS)
  private BigDecimal waterUseInGallons;

  public static final String SERIALIZED_NAME_WATER_USE_SOCIAL_COST = "waterUseSocialCost";
  @SerializedName(SERIALIZED_NAME_WATER_USE_SOCIAL_COST)
  private MCWaterUseSocialCost waterUseSocialCost;


  public MCTransactionFootprint transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * A unique id associated with a payment transaction, e.g. original payment transaction id. The same id will be returned in the response corresponding to its payment transaction.
   * @return transactionId
  **/
  @ApiModelProperty(required = true, value = "A unique id associated with a payment transaction, e.g. original payment transaction id. The same id will be returned in the response corresponding to its payment transaction.")

  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public MCTransactionFootprint carbonEmissionInGrams(BigDecimal carbonEmissionInGrams) {
    
    this.carbonEmissionInGrams = carbonEmissionInGrams;
    return this;
  }

   /**
   * The transaction&#39;s CO2 emission in grams
   * @return carbonEmissionInGrams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The transaction's CO2 emission in grams")

  public BigDecimal getCarbonEmissionInGrams() {
    return carbonEmissionInGrams;
  }


  public void setCarbonEmissionInGrams(BigDecimal carbonEmissionInGrams) {
    this.carbonEmissionInGrams = carbonEmissionInGrams;
  }


  public MCTransactionFootprint carbonEmissionInOunces(BigDecimal carbonEmissionInOunces) {
    
    this.carbonEmissionInOunces = carbonEmissionInOunces;
    return this;
  }

   /**
   * The transaction&#39;s CO2 emission in ounces
   * @return carbonEmissionInOunces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The transaction's CO2 emission in ounces")

  public BigDecimal getCarbonEmissionInOunces() {
    return carbonEmissionInOunces;
  }


  public void setCarbonEmissionInOunces(BigDecimal carbonEmissionInOunces) {
    this.carbonEmissionInOunces = carbonEmissionInOunces;
  }


  public MCTransactionFootprint carbonSocialCost(MCCarbonSocialCost carbonSocialCost) {
    
    this.carbonSocialCost = carbonSocialCost;
    return this;
  }

   /**
   * Get carbonSocialCost
   * @return carbonSocialCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MCCarbonSocialCost getCarbonSocialCost() {
    return carbonSocialCost;
  }


  public void setCarbonSocialCost(MCCarbonSocialCost carbonSocialCost) {
    this.carbonSocialCost = carbonSocialCost;
  }


  public MCTransactionFootprint waterUseInCubicMeters(BigDecimal waterUseInCubicMeters) {
    
    this.waterUseInCubicMeters = waterUseInCubicMeters;
    return this;
  }

   /**
   * The transaction&#39;s water use in cubic meters
   * @return waterUseInCubicMeters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The transaction's water use in cubic meters")

  public BigDecimal getWaterUseInCubicMeters() {
    return waterUseInCubicMeters;
  }


  public void setWaterUseInCubicMeters(BigDecimal waterUseInCubicMeters) {
    this.waterUseInCubicMeters = waterUseInCubicMeters;
  }


  public MCTransactionFootprint waterUseInGallons(BigDecimal waterUseInGallons) {
    
    this.waterUseInGallons = waterUseInGallons;
    return this;
  }

   /**
   * The transaction&#39;s water use in US gallons
   * @return waterUseInGallons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The transaction's water use in US gallons")

  public BigDecimal getWaterUseInGallons() {
    return waterUseInGallons;
  }


  public void setWaterUseInGallons(BigDecimal waterUseInGallons) {
    this.waterUseInGallons = waterUseInGallons;
  }


  public MCTransactionFootprint waterUseSocialCost(MCWaterUseSocialCost waterUseSocialCost) {
    
    this.waterUseSocialCost = waterUseSocialCost;
    return this;
  }

   /**
   * Get waterUseSocialCost
   * @return waterUseSocialCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MCWaterUseSocialCost getWaterUseSocialCost() {
    return waterUseSocialCost;
  }


  public void setWaterUseSocialCost(MCWaterUseSocialCost waterUseSocialCost) {
    this.waterUseSocialCost = waterUseSocialCost;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MCTransactionFootprint mcTransactionFootprint = (MCTransactionFootprint) o;
    return Objects.equals(this.transactionId, mcTransactionFootprint.transactionId) &&
        Objects.equals(this.carbonEmissionInGrams, mcTransactionFootprint.carbonEmissionInGrams) &&
        Objects.equals(this.carbonEmissionInOunces, mcTransactionFootprint.carbonEmissionInOunces) &&
        Objects.equals(this.carbonSocialCost, mcTransactionFootprint.carbonSocialCost) &&
        Objects.equals(this.waterUseInCubicMeters, mcTransactionFootprint.waterUseInCubicMeters) &&
        Objects.equals(this.waterUseInGallons, mcTransactionFootprint.waterUseInGallons) &&
        Objects.equals(this.waterUseSocialCost, mcTransactionFootprint.waterUseSocialCost);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, carbonEmissionInGrams, carbonEmissionInOunces, carbonSocialCost, waterUseInCubicMeters, waterUseInGallons, waterUseSocialCost);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MCTransactionFootprint {\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    carbonEmissionInGrams: ").append(toIndentedString(carbonEmissionInGrams)).append("\n");
    sb.append("    carbonEmissionInOunces: ").append(toIndentedString(carbonEmissionInOunces)).append("\n");
    sb.append("    carbonSocialCost: ").append(toIndentedString(carbonSocialCost)).append("\n");
    sb.append("    waterUseInCubicMeters: ").append(toIndentedString(waterUseInCubicMeters)).append("\n");
    sb.append("    waterUseInGallons: ").append(toIndentedString(waterUseInGallons)).append("\n");
    sb.append("    waterUseSocialCost: ").append(toIndentedString(waterUseSocialCost)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

