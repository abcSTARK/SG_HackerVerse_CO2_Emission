/*
 * Doconomy Aland Index
 * OpenAPI Specification for Doconomy Aland Index. For additional documentation and use cases, go to [Mastercard Developers](https://developer.mastercard.com/product/doconomy-aland-index).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.MCErrorResponse;
import org.openapitools.client.model.MCSupportedCurrencies;
import org.openapitools.client.model.MCSupportedMerchantCategories;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SupportedParametersApi {
    private ApiClient localVarApiClient;

    public SupportedParametersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SupportedParametersApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getSupportedCurrencies
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSupportedCurrenciesCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/supported-currencies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getSupportedCurrenciesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getSupportedCurrenciesCall(_callback);
        return localVarCall;

    }

    /**
     * Provide Supported Currencies
     * This service provides list of currencies supported by the application. While sending a transaction amount in Amount object, &#39;currencyCode&#39; should be from one of the supported currencies. It is recommended to cache this list and use it for checking before sending transactions for footprint calculation.&lt;br&gt;&lt;br&gt;Generally this list doesn&#39;t change that often but it is recommended to refresh this data every 24-hours.
     * @return MCSupportedCurrencies
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public MCSupportedCurrencies getSupportedCurrencies() throws ApiException {
        ApiResponse<MCSupportedCurrencies> localVarResp = getSupportedCurrenciesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Provide Supported Currencies
     * This service provides list of currencies supported by the application. While sending a transaction amount in Amount object, &#39;currencyCode&#39; should be from one of the supported currencies. It is recommended to cache this list and use it for checking before sending transactions for footprint calculation.&lt;br&gt;&lt;br&gt;Generally this list doesn&#39;t change that often but it is recommended to refresh this data every 24-hours.
     * @return ApiResponse&lt;MCSupportedCurrencies&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<MCSupportedCurrencies> getSupportedCurrenciesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getSupportedCurrenciesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<MCSupportedCurrencies>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Provide Supported Currencies (asynchronously)
     * This service provides list of currencies supported by the application. While sending a transaction amount in Amount object, &#39;currencyCode&#39; should be from one of the supported currencies. It is recommended to cache this list and use it for checking before sending transactions for footprint calculation.&lt;br&gt;&lt;br&gt;Generally this list doesn&#39;t change that often but it is recommended to refresh this data every 24-hours.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSupportedCurrenciesAsync(final ApiCallback<MCSupportedCurrencies> _callback) throws ApiException {

        okhttp3.Call localVarCall = getSupportedCurrenciesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<MCSupportedCurrencies>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getSupportedMerchantCategories
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSupportedMerchantCategoriesCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/supported-merchant-categories";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getSupportedMerchantCategoriesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getSupportedMerchantCategoriesCall(_callback);
        return localVarCall;

    }

    /**
     * Provide Supported MCCs
     * This service provides list of merchant category codes supported by the application. While sending a transaction data in Transaction object, &#39;mcc&#39; should be from one of the supported merchant categories. It is recommended to cache this list and use it for checking before sending transactions for footprint calculation.&lt;br&gt;&lt;br&gt;Generally this list doesn&#39;t change that often but it is recommended to refresh this data every 24-hours.
     * @return MCSupportedMerchantCategories
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public MCSupportedMerchantCategories getSupportedMerchantCategories() throws ApiException {
        ApiResponse<MCSupportedMerchantCategories> localVarResp = getSupportedMerchantCategoriesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Provide Supported MCCs
     * This service provides list of merchant category codes supported by the application. While sending a transaction data in Transaction object, &#39;mcc&#39; should be from one of the supported merchant categories. It is recommended to cache this list and use it for checking before sending transactions for footprint calculation.&lt;br&gt;&lt;br&gt;Generally this list doesn&#39;t change that often but it is recommended to refresh this data every 24-hours.
     * @return ApiResponse&lt;MCSupportedMerchantCategories&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<MCSupportedMerchantCategories> getSupportedMerchantCategoriesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getSupportedMerchantCategoriesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<MCSupportedMerchantCategories>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Provide Supported MCCs (asynchronously)
     * This service provides list of merchant category codes supported by the application. While sending a transaction data in Transaction object, &#39;mcc&#39; should be from one of the supported merchant categories. It is recommended to cache this list and use it for checking before sending transactions for footprint calculation.&lt;br&gt;&lt;br&gt;Generally this list doesn&#39;t change that often but it is recommended to refresh this data every 24-hours.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This response code is returned when a request is accepted and successfuly processed. A corresponding response will be returned for the API caller. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> This is usually a temporary error, for example when downstream Doconomy system is not reachable or is experiencing heavy traffic. Please contact support email or try again later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSupportedMerchantCategoriesAsync(final ApiCallback<MCSupportedMerchantCategories> _callback) throws ApiException {

        okhttp3.Call localVarCall = getSupportedMerchantCategoriesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<MCSupportedMerchantCategories>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
